#!/bin/bash

set -ex

checker_build="/tmp/checker.$(basename "$0")"
source common
checker_image

is_released() {
  local image_tag="sealos-$ARCH"
  pushd "$(mktemp -d)" >/dev/null || exit
  until git ls-remote --refs --sort="-version:refname" --tags "https://github.com/labring/sealos.git" | cut -d/ -f3- | grep -E "^v[4-9].+" | grep -vE "^v4.[0-1]"; do sleep 3; done >.versions
  if ! diff .versions "$checker_build/${image_tag%-*}" &>/dev/null; then
    while read -r vSEALOS; do
      if ! grep "^$vSEALOS$" "$checker_build/${image_tag%-*}" &>/dev/null && curl -sL "https://github.com/labring/sealos/releases/tag/$vSEALOS" | grep '="repo_releases"' >/dev/null; then
        date >>"/tmp/.${checker_build//\//_}"
        echo "$vSEALOS"
      fi
    done <.versions | sort
  else
    if [[ true == "$PULL_IMAGE" ]]; then
      while read -r vSEALOS; do
        if ! docker pull "$REGISTRY/$REPOSITORY:sealos-$vSEALOS-$ARCH" &>/dev/null; then
          date >>"/tmp/.${checker_build//\//_}"
          echo "$vSEALOS"
        fi
      done <.versions | sort
    fi
  fi
  cp -a .versions "$checker_build/${image_tag%-*}"
  popd >/dev/null
}

for vSEALOS in $(is_released); do
  image_tag="sealos-$vSEALOS-$ARCH"
  pushd "$(mktemp -d)" >/dev/null || exit
  until curl -sL "https://github.com/labring/sealos/releases/download/$vSEALOS/sealos_${vSEALOS#*v}_linux_$ARCH.tar.gz" | tar -xz; do sleep 3; done
  find . -type f -exec file {} \; | grep -E "(executable,|/ld-)" | awk -F: '{print $1}' | grep -vE "\.so" | while IFS='' read -r elf; do sudo chmod a+x "$elf" && binary_verify "$elf"; done
  cat <<EOF >"/tmp/$image_tag"
FROM alpine:3
ADD . /sealos
EOF
  tree -L 5
  docker buildx build \
    --platform "linux/$ARCH" \
    --label "org.opencontainers.image.source=https://github.com/$REPOSITORY" \
    --label "org.opencontainers.image.description=sealos-$vSEALOS container image" \
    --label "org.opencontainers.image.licenses=MIT" \
    -t "$REGISTRY/$REPOSITORY:$image_tag" \
    -f "/tmp/$image_tag" \
    .
  popd >/dev/null
done

if [[ -s "/tmp/.${checker_build//\//_}" ]]; then checker_image; fi
if docker images "$REGISTRY/$REPOSITORY" | grep "$REGISTRY/$REPOSITORY"; then until docker push "$REGISTRY/$REPOSITORY" --all-tags; do sleep 3; done; fi

rm -rf /tmp/tmp.*
